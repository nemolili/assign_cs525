cscope 15 $HOME/development/Assignment/assign1               0000010073
	@dberror.c

1 
	~"dbîr‹.h
"

3 
	~<°rög.h
>

4 
	~<°dlib.h
>

5 
	~<°dio.h
>

7 *
	gRC_mesßge
;

11 
	$¥ötEº‹
 (
RC
 
îr‹
)

13 i‡(
RC_mesßge
 !
NULL
)

14 
	`¥ötf
("EC (%i), \"%s\"\n", 
îr‹
, 
RC_mesßge
);

16 
	`¥ötf
("EC (%i)\n", 
îr‹
);

17 
	}
}

20 
	$îr‹Mesßge
 (
RC
 
îr‹
)

22 *
mesßge
;

24 i‡(
RC_mesßge
 !
NULL
)

26 
mesßge
 = (*Ë
	`mÆloc
(
	`°æí
(
RC_mesßge
) + 30);

27 
	`•rötf
(
mesßge
, "EC (%i), \"%s\"\n", 
îr‹
, 
RC_mesßge
);

31 
mesßge
 = (*Ë
	`mÆloc
(30);

32 
	`•rötf
(
mesßge
, "EC (%i)\n", 
îr‹
);

35  
mesßge
;

36 
	}
}

	@dberror.h

1 #i‚de‡
DBERROR_H


2 
	#DBERROR_H


	)

4 
	~"°dio.h
"

7 
	#PAGE_SIZE
 4096

	)

10 
	tRC
;

12 
	#RC_OK
 0

	)

13 
	#RC_FILE_NOT_FOUND
 1

	)

14 
	#RC_FILE_HANDLE_NOT_INIT
 2

	)

15 
	#RC_WRITE_FAILED
 3

	)

16 
	#RC_READ_NON_EXISTING_PAGE
 4

	)

18 
	#RC_RM_COMPARE_VALUE_OF_DIFFERENT_DATATYPE
 200

	)

19 
	#RC_RM_EXPR_RESULT_IS_NOT_BOOLEAN
 201

	)

20 
	#RC_RM_BOOLEAN_EXPR_ARG_IS_NOT_BOOLEAN
 202

	)

21 
	#RC_RM_NO_MORE_TUPLES
 203

	)

22 
	#RC_RM_NO_PRINT_FOR_DATATYPE
 204

	)

23 
	#RC_RM_UNKOWN_DATATYPE
 205

	)

25 
	#RC_IM_KEY_NOT_FOUND
 300

	)

26 
	#RC_IM_KEY_ALREADY_EXISTS
 301

	)

27 
	#RC_IM_N_TO_LAGE
 302

	)

28 
	#RC_IM_NO_MORE_ENTRIES
 303

	)

31 *
RC_mesßge
;

34 
¥ötEº‹
 (
RC
 
îr‹
);

35 *
îr‹Mesßge
 (
RC
 
îr‹
);

37 
	#THROW
(
rc
,
mesßge
) \

39 
RC_mesßge
=
mesßge
; \

40  
rc
; \

42 

	)

44 
	#CHECK
(
code
) \

46 
rc_öã∫Æ
 = (
code
); \

47 i‡(
rc_öã∫Æ
 !
RC_OK
) \

49 *
mesßge
 = 
	`îr‹Mesßge
(
rc_öã∫Æ
); \

50 
	`¥ötf
("[%s-L%i-%s] ERROR: O≥øti⁄Ñëu∫edÉº‹: %s\n",
__FILE__
, 
__LINE__
, 
__TIME__
, 
mesßge
); \

51 
	`‰ì
(
mesßge
); \

52 
	`exô
(1); \

54 } 0);

	)

	@storage_mgr.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"dbîr‹.h
"

4 
	~"°‹age_mgr.h
"

9 
	$öôSt‹ageM™agî
()

11 
	}
}

12 
RC
 
	$¸óãPageFûe
(*
fûeName
)

14 
FILE
* 
fc
 = 
	`f›í
(
fûeName
,"w+");

15 * 
c⁄ã¡
 = (*Ë
	`mÆloc
(
PAGE_SIZE
);

16 
i
=0; i<
PAGE_SIZE
;i++){

17 
c⁄ã¡
[
i
] = "\0";

19 
	`fwrôe
(
c⁄ã¡
,(),
PAGE_SIZE
,
fc
);

20 
	`f˛o£
(
fc
);

21  
RC_OK
;

22 
	}
}

24 
RC
 
	$›íPageFûe
(*
fûeName
, 
SM_FûeH™dÀ
 *
fH™dÀ
)

26 if(
fûeName
 =
NULL
)

28  
RC_FILE_NOT_FOUND
;

32 
FILE
* 
fo
 = 
	`f›í
(
fûeName
,"r+");

33 
fH™dÀ
->
fûeName
 = fileName;

34 
fH™dÀ
->
curPagePos
 = 0;

35 
fH™dÀ
->
tŸÆNumPages
 = (
fo
)/
PAGE_SIZE
 + 1;

37 
	`f˛o£
(
fo
);

38  
RC_OK
;

40 
	}
}

42 
RC
 
	$˛o£PageFûe
(
SM_FûeH™dÀ
 *
fH™dÀ
)

44 
	`‰ì
(
fH™dÀ
->
mgmtInfo
);

45 
fH™dÀ
->
mgmtInfo
 = 
NULL
;

46  
RC_OK
;

47 
	}
}

49 
RC
 
	$de°royPageFûe
(*
fûeName
)

51 
	`ªmove
(
fûeName
);

52  
RC_OK
;

53 
	}
}

55 
RC
 
	$ªadBlock
(
∑geNum
, 
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
)

57 
FILE
* 
fo
 = 
	`f›í
(
fH™dÀ
->
fûeName
,"r+");

58 if(
∑geNum
 > 
fH™dÀ
->
tŸÆNumPages
)

60  
RC_READ_NON_EXISTING_PAGE
;

64 if(
	`f£ek
(
fo
,(
∑geNum
-1)*
PAGE_SIZE
,
SEEK_SET
)==0)

66 
	`‰ód
(
memPage
,(),
PAGE_SIZE
,
fo
);

67  
RC_OK
;

70 
	}
}

72 
	$gëBlockPos
(
SM_FûeH™dÀ
 *
fH™dÀ
)

74  
fH™dÀ
->
curPagePos
;

75 
	}
}

77 
RC
 
	$ªadFú°Block
(
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
)

79 
	`ªadBlock
(1,
fH™dÀ
,
memPage
);

80 
	}
}

82 
RC
 
	$ªadPªviousBlock
(
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
)

84 
	`ªadBlock
((
fH™dÀ
->
curPagePos
-1),fH™dÀ,
memPage
);

85 
	}
}

87 
RC
 
	$ªadCuºítBlock
(
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
)

89 
	`ªadBlock
((
fH™dÀ
->
curPagePos
),fH™dÀ,
memPage
);

90 
	}
}

92 
RC
 
	$ªadNextBlock
(
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
)

94 
	`ªadBlock
((
fH™dÀ
->
curPagePos
+1),fH™dÀ,
memPage
);

95 
	}
}

97 
RC
 
	$ªadLa°Block
(
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
)

99 
	`ªadBlock
((
fH™dÀ
->
tŸÆNumPages
),fH™dÀ,
memPage
);

100 
	}
}

102 
RC
 
	$wrôeBlock
(
∑geNum
, 
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
)

104 
FILE
* 
fo
 = 
	`f›í
(
fH™dÀ
->
fûeName
,"a+");

105 if(
∑geNum
 > 
fH™dÀ
->
tŸÆNumPages
)

107  
RC_READ_NON_EXISTING_PAGE
;

111 if(
	`f£ek
(
fo
,(
∑geNum
-1)*
PAGE_SIZE
,
SEEK_SET
)==0)

113 
	`fwrôe
(
memPage
,(),
PAGE_SIZE
,
fo
);

114  
RC_OK
;

117 
	}
}

119 
RC
 
	$wrôeCuºítBlock
(
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
)

121 
	`wrôeBlock
((
fH™dÀ
->
curPagePos
),fH™dÀ,
memPage
);

122 
	}
}

124 
RC
 
	$≠≥ndEm±yBlock
(
SM_FûeH™dÀ
 *
fH™dÀ
)

126 
FILE
* 
fo
 = 
	`f›í
(
fH™dÀ
->
fûeName
,"a+");

127 
fH™dÀ
->
tŸÆNumPages
 += 1;

128 
c⁄ã¡
 = "\0";

129 if(
	`f£ek
(
fo
,0,
SEEK_END
)==0)

131 
	`fwrôe
(
c⁄ã¡
,(c⁄ã¡),
PAGE_SIZE
,
fo
);

133  
RC_OK
;

134 
	}
}

136 
RC
 
	$ísuªC≠acôy
(
numbîOfPages
, 
SM_FûeH™dÀ
 *
fH™dÀ
)

138 
FILE
* 
fo
 = 
	`f›í
((
fH™dÀ
->
fûeName
),"a+");

139 
numPageAdd
 = 
numbîOfPages
 - 
fH™dÀ
->
tŸÆNumPages
;

140 
i
=0; i<
numPageAdd
; i++)

142 
	`≠≥ndEm±yBlock
(
fH™dÀ
);

144 
	}
}

	@storage_mgr.h

1 #i‚de‡
STORAGE_MGR_H


2 
	#STORAGE_MGR_H


	)

4 
	~"dbîr‹.h
"

9 
	sSM_FûeH™dÀ
 {

10 *
	mfûeName
;

11 
	mtŸÆNumPages
;

12 
	mcurPagePos
;

13 *
	mmgmtInfo
;

14 } 
	tSM_FûeH™dÀ
;

16 * 
	tSM_PageH™dÀ
;

22 
öôSt‹ageM™agî
 ();

23 
RC
 
¸óãPageFûe
 (*
fûeName
);

24 
RC
 
›íPageFûe
 (*
fûeName
, 
SM_FûeH™dÀ
 *
fH™dÀ
);

25 
RC
 
˛o£PageFûe
 (
SM_FûeH™dÀ
 *
fH™dÀ
);

26 
RC
 
de°royPageFûe
 (*
fûeName
);

29 
RC
 
ªadBlock
 (
∑geNum
, 
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
);

30 
gëBlockPos
 (
SM_FûeH™dÀ
 *
fH™dÀ
);

31 
RC
 
ªadFú°Block
 (
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
);

32 
RC
 
ªadPªviousBlock
 (
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
);

33 
RC
 
ªadCuºítBlock
 (
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
);

34 
RC
 
ªadNextBlock
 (
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
);

35 
RC
 
ªadLa°Block
 (
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
);

38 
RC
 
wrôeBlock
 (
∑geNum
, 
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
);

39 
RC
 
wrôeCuºítBlock
 (
SM_FûeH™dÀ
 *
fH™dÀ
, 
SM_PageH™dÀ
 
memPage
);

40 
RC
 
≠≥ndEm±yBlock
 (
SM_FûeH™dÀ
 *
fH™dÀ
);

41 
RC
 
ísuªC≠acôy
 (
numbîOfPages
, 
SM_FûeH™dÀ
 *
fH™dÀ
);

	@test_assign1_1.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<°rög.h
>

4 
	~<uni°d.h
>

6 
	~"°‹age_mgr.h
"

7 
	~"dbîr‹.h
"

8 
	~"ã°_hñ≥r.h
"

11 *
	gã°Name
;

14 
	#TESTPF
 "ã°_∑gefûe.bö"

	)

17 
ã°Cª©eO≥nClo£
();

18 
ã°SögÀPageC⁄ã¡
();

22 
	$maö
 ()

24 
ã°Name
 = "";

26 
	`öôSt‹ageM™agî
();

28 
	`ã°Cª©eO≥nClo£
();

29 
	`ã°SögÀPageC⁄ã¡
();

32 
	}
}

38 
	$ã°Cª©eO≥nClo£
()

40 
SM_FûeH™dÀ
 
fh
;

42 
ã°Name
 = "test create openánd close methods";

44 
	`TEST_CHECK
(
	`¸óãPageFûe
 (
TESTPF
));

46 
	`TEST_CHECK
(
	`›íPageFûe
 (
TESTPF
, &
fh
));

47 
	`ASSERT_TRUE
(
	`°rcmp
(
fh
.
fûeName
, 
TESTPF
) == 0, "filename correct");

48 
	`ASSERT_TRUE
((
fh
.
tŸÆNumPages
 == 1), "expect 1Öage inÇew file");

49 
	`ASSERT_TRUE
((
fh
.
curPagePos
 == 0), "freshly opened file'sÖageÖosition should be 0");

51 
	`TEST_CHECK
(
	`˛o£PageFûe
 (&
fh
));

52 
	`TEST_CHECK
(
	`de°royPageFûe
 (
TESTPF
));

55 
	`ASSERT_TRUE
((
	`›íPageFûe
(
TESTPF
, &
fh
Ë!
RC_OK
), "openingÇon-existing file shouldÑeturnánÉrror.");

57 
	`TEST_DONE
();

58 
	}
}

62 
	$ã°SögÀPageC⁄ã¡
()

64 
SM_FûeH™dÀ
 
fh
;

65 
SM_PageH™dÀ
 
ph
;

66 
i
;

68 
ã°Name
 = "test singleÖage content";

70 
ph
 = (
SM_PageH™dÀ
Ë
	`mÆloc
(
PAGE_SIZE
);

73 
	`TEST_CHECK
(
	`¸óãPageFûe
 (
TESTPF
));

74 
	`TEST_CHECK
(
	`›íPageFûe
 (
TESTPF
, &
fh
));

75 
	`¥ötf
("createdánd opened file\n");

78 
	`TEST_CHECK
(
	`ªadFú°Block
 (&
fh
, 
ph
));

80 
i
=0; i < 
PAGE_SIZE
; i++)

81 
	`ASSERT_TRUE
((
ph
[
i
] == 0), "expected zero byte in firstÖage of freshly initializedÖage");

82 
	`¥ötf
("first block wasÉmpty\n");

85 
i
=0; i < 
PAGE_SIZE
; i++)

86 
ph
[
i
] = (i % 10) + '0';

87 
	`TEST_CHECK
(
	`wrôeBlock
 (0, &
fh
, 
ph
));

88 
	`¥ötf
("writing first block\n");

91 
	`TEST_CHECK
(
	`ªadFú°Block
 (&
fh
, 
ph
));

92 
i
=0; i < 
PAGE_SIZE
; i++)

93 
	`ASSERT_TRUE
((
ph
[
i
] == (i % 10) + '0'), "character inÖageÑead from disk isÅhe one weÉxpected.");

94 
	`¥ötf
("reading first block\n");

97 
	`TEST_CHECK
(
	`de°royPageFûe
 (
TESTPF
));

99 
	`TEST_DONE
();

100 
	}
}

	@test_helper.h

1 #i‚de‡
TEST_HELPER_H


2 
	#TEST_HELPER_H


	)

4 
	~<°dio.h
>

5 
	~<°dlib.h
>

6 
	~<°rög.h
>

7 
	~<time.h
>

10 *
ã°Name
;

13 
	#TEST_INFO
 
__FILE__
, 
ã°Name
, 
__LINE__
, 
__TIME__


	)

16 
	#TEST_CHECK
(
code
) \

18 
rc_öã∫Æ
 = (
code
); \

19 i‡(
rc_öã∫Æ
 !
RC_OK
) \

21 *
mesßge
 = 
	`îr‹Mesßge
(
rc_öã∫Æ
); \

22 
	`¥ötf
("[%s-%s-L%i-%s] FAILED: O≥øti⁄Ñëu∫edÉº‹: %s\n",
TEST_INFO
, 
mesßge
); \

23 
	`‰ì
(
mesßge
); \

24 
	`exô
(1); \

26 } 0);

	)

29 
	#ASSERT_EQUALS_STRING
(
ex≥˘ed
,
ªÆ
,
mesßge
) \

31 i‡(
	`°rcmp
((
ex≥˘ed
),(
ªÆ
)) != 0) \

33 
	`¥ötf
("[%s-%s-L%i-%s] FAILED:Éx≥˘ed <%s> buàwa†<%s>: %s\n",
TEST_INFO
, 
ex≥˘ed
, 
ªÆ
, 
mesßge
); \

34 
	`exô
(1); \

36 
	`¥ötf
("[%s-%s-L%i-%s] OK:Éx≥˘ed <%s>ánd wa†<%s>: %s\n",
TEST_INFO
, 
ex≥˘ed
, 
ªÆ
, 
mesßge
); \

37 } 0)

	)

40 
	#ASSERT_EQUALS_INT
(
ex≥˘ed
,
ªÆ
,
mesßge
) \

42 i‡((
ex≥˘ed
Ë!(
ªÆ
)) \

44 
	`¥ötf
("[%s-%s-L%i-%s] FAILED:Éx≥˘ed <%i> buàwa†<%i>: %s\n",
TEST_INFO
, 
ex≥˘ed
, 
ªÆ
, 
mesßge
); \

45 
	`exô
(1); \

47 
	`¥ötf
("[%s-%s-L%i-%s] OK:Éx≥˘ed <%i>ánd wa†<%i>: %s\n",
TEST_INFO
, 
ex≥˘ed
, 
ªÆ
, 
mesßge
); \

48 } 0)

	)

51 
	#ASSERT_TRUE
(
ªÆ
,
mesßge
) \

53 i‡(!(
ªÆ
)) \

55 
	`¥ötf
("[%s-%s-L%i-%s] FAILED:Éx≥˘edÅrue: %s\n",
TEST_INFO
, 
mesßge
); \

56 
	`exô
(1); \

58 
	`¥ötf
("[%s-%s-L%i-%s] OK:Éx≥˘edÅrue: %s\n",
TEST_INFO
, 
mesßge
); \

59 } 0)

	)

63 
	#ASSERT_ERROR
(
ex≥˘ed
,
mesßge
) \

65 
ªsu…
 = (
ex≥˘ed
); \

66 i‡(
ªsu…
 =(
RC_OK
)) \

68 
	`¥ötf
("[%s-%s-L%i-%s] FAILED:Éx≥˘edá¿îr‹: %s\n",
TEST_INFO
, 
mesßge
); \

69 
	`exô
(1); \

71 
	`¥ötf
("[%s-%s-L%i-%s] OK:Éx≥˘edá¿îr‹ánd wa†RC <%i>: %s\n",
TEST_INFO
, 
ªsu…
 , 
mesßge
); \

72 } 0)

	)

75 
	#TEST_DONE
() \

77 
	`¥ötf
("[%s-%s-L%i-%s] OK: föishedÅe°\n\n",
TEST_INFO
); \

78 } 0)

	)

	@
1
.
0
6
79
dberror.c
dberror.h
storage_mgr.c
storage_mgr.h
test_assign1_1.c
test_helper.h
